env:
  global:
    - CC_TEST_REPORT_ID=5a189828ab498e2cbfa3f07feffedd924278c75dbf4a4f2bb2b60cf09deba213

language: node_js
node_js:
- '10.15.1'
# - '8.10.0'
cache: yarn
before_install:
# - chmod 755 ./deploy.sh
install:
- yarn install
before_script:
# - git config --global user.email "travis@travis-ci.org"
# - git config --global user.name "Travis"
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
script:
# - chmod +x ./deploy-ghpages.sh
  - yarn build # Change this script to run your production build command
# - chmod +x ./deploy.sh
# - "./deploy.sh"
  - yarn run lint
after_success:
# this "deploy.sh" has code to deploy files generated from vue production build
# - gulp deploy
# - "./deploy.sh"
after_failure:
after_script:
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info  # Format frontend coverage
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2                  # Sum both coverage parts into coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json
before_deploy:
deploy:
# Standard GH-Pages Deploy
  provider: pages
  skip-cleanup: true
#   github-token: fd8d095ed53a0c01428a583edf6fa199c0c5fae3  # Set in the settings page of your repository, as a secure variable
  github-token: $GH_TOKEN  # Set in the settings page of your repository, as a secure variable
  keep-history: true
  local_dir: dist # Change this to your build directory
  on:
    branch: master
after_deploy: